# Default values for web-service.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

app:
  name: ""  # e.g., identity-uw, defaults to .Chart.Name
  clusterDomain: ~  # e.g., iamdev.s.uw.edu

replicaCount: 1

flux:
  syncInterval: 5m0s

vaultSecrets:
  tenant: "" # tenant name, e.g., 'iam' or 'iti'
  enabled: true
  # secrets:
  #  - name: my-secret
  #    source: eval/foo/bar/shh
  secrets: []

image:
  name: ghcr.io/uwit-iam/example-flask-app
  tag: latest
  deploymentTag: ~  # Deprecated, but kept for backward compatibility with v<=0.3.0
  pullPolicy: IfNotPresent

ports:
  # The port exposed on the container to handle http requests.
  # Service ports connect to container ports.
  containerHttpPort: 8000

probes:
  path: '/status'
  liveness:
    enabled: true
    queryString: ~  # Set if needed for your application
    path: ~  # Will default to the root 'path'
    failureThreshold: 3
    initialDelaySeconds: 30
    periodSeconds: 30
    successThreshold: 1
    timeoutSeconds: 3
  readiness:
    enabled: true
    queryString: '?ready'  # Override if needed or nullify with ~
    path: ~  # Will default to the root 'path'
    failureThreshold: 3
    initialDelaySeconds: 30
    periodSeconds: 30
    successThreshold: 1
    timeoutSeconds: 3

podAnnotations: {}

prometheusServiceMonitor:
  enabled: false
  # To enable auth (recommended!), dependent apps would need to include
  # a map to the secret username and password, such as:
  # basicAuth:
  #   username:
  #     name: <secret_name>   # e.g., 'prom-servicemanager-secrets'
  #     key: <config_json_key>  # e.g., 'username'
  #   password:
  #     name: <secret_name>
  #     key: <config_json_key>  # e.g., 'password'
  #
  # in this case, the `prom-servicemanager-secrets` secret would need to be
  # json in the form of: "{username: 'promUserName', password: 'promP@55w0rd!'}"
  basicAuth: {}

environmentVariables: {}

environmentSecrets: []
# If you have secrets stored in key-value pairs
# that you would like to map to environment variables,
# you can define those here in the following format.
# (and remove `[]` above):
#
#  dest: ENV_VAR_NAME
#  secretName: name-of-kubernetes-secret
#  key: someKeyInsideTheSecret

# If you have secrets whose key-value pairs you want to simply import
# into your environment, you can provide a list of those secret names here.
environmentSecretRefs: []


service:
  type: ClusterIP
  port: 80
  targetPort: ~

ingress:
  # If disabled (default), you must provide your own
  # ingress configuration. This is meant to allow apps with
  # non-comformant ingresses to migrate to the helm chart in stages.
  enabled: false
  tls: false
  annotations: {}
  # All host entries are optional. If none are provided, a default
  # entry is created based on the example below, as long as app.clusterDomain is
  # defined.
  hosts: []
    # - host: foo.cluster.s.uw.edu  # <appName>.<clusterDomain>
    #   tls: ~  (true|false, default is to inherit from .Values.ingress.tls)
    #   path: /  # (default)
    #   pathType: Prefix # (default)
    #   service: ~ (default is generated service name)
    #   port: ~ (default is service.port)
  saml:
    # If you enable saml integration, it is assumed that you
    # already have an nginx-saml-ingress integration set up
    # in your cluster.
    enabled: false
    # Fill in the id of the groups.uw.edu group that you
    # want to use to authenticate to your service.
    # ALL groups that you intend to use with this template
    # must be added as requested attributes. If you leave
    # this blank, _ANY_ logged in user will be able
    # to access your application. If that
    gwsGroupId: ~
    entityId: ~
    acs: /saml/login
    proxyHost: http://nginx-saml-proxy
    # List all paths that should be protected by proxy. By default, all paths
    # are protected except for the /saml/ path which is reserved for proxying,
    # and any probes configured. You can override to add explicitly protected
    # paths under entryPoints.
    entryPoints:
      - '/'

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

# If ingress.saml.enabled is set to `true`,
# then an nginx volume and volumeMount entry
# will be added; you do not need to define them.
volumes: {}

volumeMounts: {}

# Some applications need the support of additional containers.
# Those can be configured here; although, if they are complex enough,
# consider figuring out how to decouple things to the degree that your
# container is simply a configured application itself.
supportingContainers: []
